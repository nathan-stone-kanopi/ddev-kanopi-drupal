name: ddev-kanopi-drupal

# Based on https://github.com/ddev/ddev/blob/HEAD/pkg/ddevapp/addons.go#L61
project_files:
- commands/
- scripts/
- php/
- nginx_full/

# DDEV version constraint
ddev_version_constraint: ">= v1.22.0"

# Pre-install actions
pre_install_actions:
# Introduction
- |
  #ddev-description:Configuring Kanopi Drupal Add-on
  echo ""
  echo "🔧 Configuring Kanopi Drupal Add-on..."
  echo ""
  echo "💡 Note: Configuration variables can be set later using 'ddev project-configure'"
  echo ""

# Post-install actions
post_install_actions:

- |
  #ddev-description: Configure environment variables for CI
  # Auto-configure environment variables for CI and testing environments
  if [ "${CI:-}" = "true" ] || [ "${GITHUB_ACTIONS:-}" = "true" ] || [ "${DDEV_NONINTERACTIVE:-}" = "true" ]; then
    echo ""
    echo "🔧 Detected CI/testing environment, configuring default variables..."

    # Set CI-friendly defaults that match the comprehensive test expectations
    ddev config --web-environment-add=HOSTING_PROVIDER=pantheon
    ddev config --web-environment-add=THEME=themes/custom/testtheme
    ddev config --web-environment-add=THEMENAME=testtheme
    ddev config --web-environment-add=HOSTING_SITE=test-site-123
    ddev config --web-environment-add=HOSTING_ENV=dev
    ddev config --web-environment-add=MIGRATE_DB_SOURCE=test-migration-source
    ddev config --web-environment-add=MIGRATE_DB_ENV=live

    echo "✅ Default environment variables configured for CI"
    echo "   Variables can be reconfigured later using 'ddev project-configure'"
  else
    echo ""
    echo "💡 Interactive environment detected"
    echo "   Run 'ddev project-configure' after installation to set up your hosting provider"
  fi

- |
  #ddev-description: Install required DDEV add-ons
  # Install DDEV add-ons with graceful failure handling for CI environments
  set +e  # Allow commands to fail without stopping the script
  echo ""
  echo "📦 Installing Redis add-on..."
  if ddev add-on get ddev/ddev-redis 2>&1; then
    echo "✅ Redis add-on installed successfully"
  else
    echo "⚠️  Redis add-on installation failed (likely GitHub API rate limit in CI)"
    echo "   You can install it manually later with: ddev add-on get ddev/ddev-redis"
  fi
  echo ""
  echo "📦 Installing Solr add-on..."
  if ddev add-on get ddev/ddev-drupal-solr 2>&1; then
    echo "✅ Solr add-on installed successfully"
  else
    echo "⚠️  Solr add-on installation failed (likely GitHub API rate limit in CI)"
    echo "   You can install it manually later with: ddev add-on get ddev/ddev-drupal-solr"
  fi
  echo ""
  echo "📦 Installing PhpMyAdmin add-on..."
  if ddev add-on get ddev/ddev-phpmyadmin 2>&1; then
    echo "✅ PhpMyAdmin add-on installed successfully"
  else
    echo "⚠️  PhpMyAdmin add-on installation failed (likely GitHub API rate limit in CI)"
    echo "   You can install it manually later with: ddev add-on get ddev/ddev-phpmyadmin"
  fi
  set -e  # Re-enable strict error checking
  echo ""
  echo "Ignore DDEV add-on settings files"
  echo "settings.ddev.redis.php" >> ../.gitignore
  echo "settings.ddev.drupal-solr.php" >> ../.gitignore

- |
  #ddev-description: Setup xdebug output directory
  # Ignore xdebug output folder
  echo ""
  echo "📦 Setting up xdebug output directory..."
  mkdir -p ../xdebug
  echo "Output directory for cachegrind files.  See .ddev/config/php_xdebug/xdebug.ini" > ../xdebug/README.md
  echo "xdebug/cachegrind.*" >> ../.gitignore

# Explain the installed components
- |
  echo ""
  echo "✅ Kanopi Drupal Add-on installed successfully!"
  echo ""
  echo "📦 Installed components:"
  echo "   • Enhanced multi-provider support (Pantheon/Acquia) with smart backup management"
  echo "   • 27 custom commands for Drupal development workflow"
  echo "   • Theme development tools with Node.js/NPM support"
  echo "   • Cypress testing integration"
  echo "   • Drupal Recipe support"
  echo "   • Migration and backup utilities"
  echo "   • Redis add-on for caching"
  echo "   • Solr add-on with DDEV configuration for search functionality"
  echo "   • PhpMyAdmin for database administration"
  echo "   • Setup xdebug performance profiling.  Can be switched back to normal debugging as well."
  echo ""
  echo "🔧 Next steps:"
  echo "   1. Run 'ddev project-configure' to set up your hosting provider and variables"
  echo "   2. Add Solr configuration to your settings.php, if needed (see below)"
  echo "   3. Run 'ddev restart' to apply configuration changes"
  echo "   4. Run 'ddev project-init' to complete project initialization"
  echo ""
  echo "🔍 Solr Configuration:"
  echo "   Add this configuration to web/sites/default/settings.php to connect to DDEV Solr."
  echo "   Note: Adjust the server machine name to match your project's Search API server."
  echo ""
  echo "   /**"
  echo "    * DDEV Solr Configuration"
  echo "    * Override Pantheon search configuration when in DDEV environment"
  echo "    */"
  echo "   if (getenv('IS_DDEV_PROJECT') == 'true') {"
  echo "     // Override any Pantheon search configuration for DDEV"
  echo "     \$config['search_api.server.pantheon_solr8']['backend_config']['connector'] = 'standard';"
  echo "     \$config['search_api.server.pantheon_solr8']['backend_config']['connector_config']['host'] = 'solr';"
  echo "     \$config['search_api.server.pantheon_solr8']['backend_config']['connector_config']['port'] = '8983';"
  echo "     \$config['search_api.server.pantheon_solr8']['backend_config']['connector_config']['path'] = '/';"
  echo "     \$config['search_api.server.pantheon_solr8']['backend_config']['connector_config']['core'] = 'dev';"
  echo "     "
  echo "     // Alternative configuration if using different server name"
  echo "     \$config['search_api.server.solr']['backend_config']['connector'] = 'standard';"
  echo "     \$config['search_api.server.solr']['backend_config']['connector_config']['host'] = 'solr';"
  echo "     \$config['search_api.server.solr']['backend_config']['connector_config']['port'] = '8983';"
  echo "     \$config['search_api.server.solr']['backend_config']['connector_config']['path'] = '/';"
  echo "     \$config['search_api.server.solr']['backend_config']['connector_config']['core'] = 'dev';"
  echo "   }"
  echo ""
  echo "📚 Run 'ddev help' to see available commands"
  echo ""

removal_action:
# Remove all installed components and add-ons
- |
  echo ""
  echo "🗑️ Removing Kanopi Drupal Add-on..."
  echo ""

  # Remove caching add-ons (both Redis and Memcached)
  echo "📦 Removing caching add-ons..."
  if ddev add-on remove ddev-redis 2>/dev/null; then
    echo "✅ Redis add-on removed successfully"
  else
    echo "⚠️ Redis add-on removal failed or not found"
  fi

  if ddev add-on remove ddev-memcached 2>/dev/null; then
    echo "✅ Memcached add-on removed successfully"
  else
    echo "⚠️ Memcached add-on removal failed or not found"
  fi

  # Remove Solr add-on
  echo "📦 Removing Solr add-on..."
  if ddev add-on remove ddev-drupal-solr 2>/dev/null; then
    echo "✅ Solr add-on removed successfully"
  else
    echo "⚠️ Solr add-on removal failed or not found"
  fi

  # Remove PhpMyAdmin add-on
  echo "📦 Removing PhpMyAdmin add-on..."
  if ddev add-on remove ddev-phpmyadmin 2>/dev/null; then
    echo "✅ PhpMyAdmin add-on removed successfully"
  else
    echo "⚠️ PhpMyAdmin add-on removal failed or not found"
  fi

  # Remove all custom commands
  echo "🔧 Removing custom commands..."

  # Remove host commands
  rm -f commands/host/cypress-install 2>/dev/null || true
  rm -f commands/host/cypress-run 2>/dev/null || true
  rm -f commands/host/cypress-users 2>/dev/null || true
  rm -f commands/host/db-rebuild 2>/dev/null || true
  rm -f commands/host/drupal-uli 2>/dev/null || true
  rm -f commands/host/pantheon-terminus 2>/dev/null || true
  rm -f commands/host/pantheon-testenv 2>/dev/null || true
  rm -f commands/host/phpmyadmin 2>/dev/null || true
  rm -f commands/host/project-auth 2>/dev/null || true
  rm -f commands/host/project-configure 2>/dev/null || true
  rm -f commands/host/project-init 2>/dev/null || true
  rm -f commands/host/project-lefthook 2>/dev/null || true
  rm -f commands/host/project-nvm 2>/dev/null || true

  # Remove web commands
  rm -f commands/web/critical-install 2>/dev/null || true
  rm -f commands/web/critical-run 2>/dev/null || true
  rm -f commands/web/db-prep-migrate 2>/dev/null || true
  rm -f commands/web/db-refresh 2>/dev/null || true
  rm -f commands/web/drupal-open 2>/dev/null || true
  rm -f commands/web/pantheon-tickle 2>/dev/null || true
  rm -f commands/web/recipe-apply 2>/dev/null || true
  rm -f commands/web/recipe-unpack 2>/dev/null || true
  rm -f commands/web/recipe-uuid-rm 2>/dev/null || true
  rm -f commands/web/theme-build 2>/dev/null || true
  rm -f commands/web/theme-install 2>/dev/null || true
  rm -f commands/web/theme-npm 2>/dev/null || true
  rm -f commands/web/theme-npx 2>/dev/null || true
  rm -f commands/web/theme-watch 2>/dev/null || true

  echo "✅ Custom commands removed"

  # Remove PHP xdebug file, scripts, and nginx config (if exists)
  rm -f config/php_xdebug/xdebug.ini 2>/dev/null || true
  rm -rf scripts 2>/dev/null || true
  rm -rf ../xdebug 2>/dev/null || true
  rm -rf ../nginx_full 2>/dev/null || true

  # Remove any remaining Redis command directories
  rm -rf commands/redis 2>/dev/null || true

  # Clean up empty directories
  rmdir commands/host 2>/dev/null || true
  rmdir commands/web 2>/dev/null || true
  rmdir commands 2>/dev/null || true

  echo ""
  echo "✅ Kanopi Drupal Add-on removed successfully!"
  echo "   • Redis, Solr, and PhpMyAdmin add-ons uninstalled"
  echo "   • All 27 custom commands removed"
  echo "   • Platform-specific configurations removed (Nginx/Apache)"
  echo "   • Environment variables preserved (remove manually if needed)"
  echo ""
  echo "💡 Tip: Run 'ddev restart' to apply changes"
  echo ""
